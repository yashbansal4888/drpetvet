{"version":3,"sources":["../../../src/server/redirectHelpers.ts"],"sourcesContent":["import { constants, createRedirect } from '@clerk/backend/internal';\nimport { NextResponse } from 'next/server';\n\nimport { setHeader } from '../utils';\nimport { PUBLISHABLE_KEY, SIGN_IN_URL, SIGN_UP_URL } from './constants';\n\nconst redirectAdapter = (url: string) => {\n  const res = NextResponse.redirect(url);\n  return setHeader(res, constants.Headers.ClerkRedirectTo, 'true');\n};\n\nconst redirectHelpers = createRedirect({\n  redirectAdapter,\n  signInUrl: SIGN_IN_URL,\n  signUpUrl: SIGN_UP_URL,\n  publishableKey: PUBLISHABLE_KEY,\n  // We're setting baseUrl to '' here as we want to keep the legacy behavior of\n  // the redirectToSignIn, redirectToSignUp helpers in the backend package.\n  baseUrl: '',\n});\n\n/**\n * @deprecated\n * This function is deprecated and will be removed in a future release. Please use `auth().redirectToSignIn()` instead.\n */\nexport const redirectToSignIn = redirectHelpers.redirectToSignIn;\n\n/**\n * @deprecated\n * This function is deprecated and will be removed in a future release. Please use `auth().redirectToSignIn()` instead.\n */\nexport const redirectToSignUp = redirectHelpers.redirectToSignUp;\n"],"mappings":"AAAA,SAAS,WAAW,sBAAsB;AAC1C,SAAS,oBAAoB;AAE7B,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB,aAAa,mBAAmB;AAE1D,MAAM,kBAAkB,CAAC,QAAgB;AACvC,QAAM,MAAM,aAAa,SAAS,GAAG;AACrC,SAAO,UAAU,KAAK,UAAU,QAAQ,iBAAiB,MAAM;AACjE;AAEA,MAAM,kBAAkB,eAAe;AAAA,EACrC;AAAA,EACA,WAAW;AAAA,EACX,WAAW;AAAA,EACX,gBAAgB;AAAA;AAAA;AAAA,EAGhB,SAAS;AACX,CAAC;AAMM,MAAM,mBAAmB,gBAAgB;AAMzC,MAAM,mBAAmB,gBAAgB;","names":[]}